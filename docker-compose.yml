version: "3.8"

services:
  api-search:
    build: ./services/api-search
    ports:
      - "4001:4001"
    environment:
      - ELASTIC_URL=http://elasticsearch:9200
      - REDIS_URL=redis://redis:6379
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_started
  api-main:
    build: ./services/api-main
    ports:
      - "4000:4000"
    environment:
      - MONGO_URL=mongodb://mongo:27017/products
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=z1knEA3UDk6Lv0AcOhjE
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
      api-search:
        condition: service_started
      elasticsearch:
        condition: service_healthy
  mongo:
    image: mongo:6.0.26-jammy
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health?wait_for_status=yellow\\&timeout=5s || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  mongo_data:
  redis_data:
  es_data:
